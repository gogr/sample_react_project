{"version":3,"sources":["components/Icons/CalendarIcon.js","components/Icons/BetterIcon.js","components/Chat/ChatPost.js","components/Icons/SendIcon.js","components/Chat/Chat.js","App.js","serviceWorker.js","index.js"],"names":["CalendarIcon","props","react_default","a","createElement","Object","assign","width","height","viewBox","xmlns","aria-hidden","role","stroke","stroke-width","fill","fill-rule","d","BetterIcon","ChatPost","state","animIn","showingBack","toggleBackside","event","_this","setState","showBackside","hideBackside","timeStampToMS","ts","getClassName","theseClasses","push","userData","id","join","this","timeoutId","setTimeout","scrollToBottom","bind","clearTimeout","className","tabIndex","key","src","profileImgSrc","alt","profileImgAlt","Icons_BetterIcon","real_name","username","timeago_react_default","datetime","postData","data-state-backside","onTouchStart","onTouchEnd","message","Icons_CalendarIcon","React","Component","SendIcon","focusable","Chat","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","remainingChars","maxPostChars","target","value","length","remainingPostChars","refs","chatList","scrollTop","scrollHeight","handleSubmit","preventDefault","formBusy","Date","now","newPost","user","chatInput","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","console","log","newPosts","posts","focus","users","client","verified","status","postsBusy","_this2","usersById","map","userID","_this3","aria-label","aria-busy","onSubmit","href","aria-live","ref","post","Chat_ChatPost","getUserDataByID","htmlFor","type","placeholder","maxLength","autoComplete","required","onKeyUp","disabled","Icons_SendIcon","App","components_Chat_Chat","Boolean","window","location","hostname","match","ReactDOM","hydrate","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbd0e70e.chunk.js","sourcesContent":["import React from 'react';\n\nconst CalendarIcon = (props) => (\n  <svg width=\"500px\" height=\"500px\" viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"presentation\" {...props}>\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <path d=\"M426,52 L404,52 L404,8 L360,8 L360,52 L140,52 L140,8 L96,8 L96,52 L74,52 C49.8,52 30,71.8 30,96 L30,448 C30,472.2 49.8,492 74,492 L426,492 C450.2,492 470,472.2 470,448 L470,96 C470,71.8 450.2,52 426,52 Z M426,448 L74,448 L74,162 L426,162 L426,448 Z\" fill=\"currentColor\" fill-rule=\"nonzero\"></path>\n    </g>\n  </svg>\n);\n\nexport default CalendarIcon;\n","import React from 'react';\n\nconst BetterIcon = (props) => (\n  <svg width=\"174\" height=\"174\" viewBox=\"0 0 174 174\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"presentation\" {...props}>\n    <path d=\"M79.866 26.627l-17.27-6.399L10 62.557v66.589l52 22.669V85.226l51-41.795 51 41.795v66.589l-52-22.669V95\" stroke-width=\"20\" stroke=\"#FFF\" fill=\"none\" fill-rule=\"evenodd\"/>\n  </svg>\n);\n\nexport default BetterIcon;\n","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport CalendarIcon from '../../components/Icons/CalendarIcon';\nimport BetterIcon from '../../components/Icons/BetterIcon';\n\nclass ChatPost extends React.Component {\n\n  state = {\n    animIn : false,\n    showingBack : false\n  };\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(function () {\n      this.setState({animIn: true});\n      this.props.scrollToBottom();\n    }.bind(this), 200);\n  }\n\n  componentWillUnmount () {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  toggleBackside = (event) => {\n    this.setState({showingBack: ( this.state.showingBack ? false : true ) });\n  }\n\n  showBackside = (event) => {\n    this.setState({showingBack: true});\n  }\n  hideBackside = (event) => {\n    this.setState({showingBack: false});\n  }\n\n  timeStampToMS = (ts) => {\n    return ts * 1000;\n  }\n\n  getClassName = () => {\n    let theseClasses = [\"chat-post\"];\n    if(this.state.animIn)\n      theseClasses.push(\"anim-in\");\n    if(this.props.userData.id === \"client\")\n      theseClasses.push(\"chat-post-fromClient\");\n    return theseClasses.join(\" \");\n  }\n\n  render() {\n    return (\n      <li\n        className={this.getClassName()}\n        tabIndex=\"0\"\n        key={this.props.id}\n      >\n        <div className=\"chat-post-profileImg\">\n          <span className=\"chat-post-profileImg-media\">\n          {\n            this.props.userData.id !== \"client\" ? (\n              <img src={this.props.userData.profileImgSrc} alt={this.props.userData.profileImgAlt} />\n            ) : (\n              <BetterIcon />\n            )\n          }\n          </span>\n        </div>\n        <div className=\"chat-post-body\">\n          <div className=\"chat-post-meta ui_flexwrap-edges ui_text-small\">\n            {\n              this.props.userData.id !== \"client\" ? (\n                <div className=\"chat-meta-user\">\n                  {this.props.userData.real_name} - @{this.props.userData.username}\n                </div>\n              ) : (\n                <span className=\"ui_inclusively-hidden\">you </span>\n              )\n            }\n            <div className=\"chat-meta-timeAgo\">\n              <span className=\"ui_inclusively-hidden\">posted </span>\n              <TimeAgo\n                datetime={this.timeStampToMS(this.props.postData.ts)}\n              />\n            </div>\n          </div>\n          <div\n            className=\"chat-post-content\"\n            data-state-backside={this.state.showingBack ? 'show' : 'hide'}\n            onTouchStart={this.showBackside} onTouchEnd={this.hideBackside}\n            >\n            <div className=\"chat-post-message\">\n              {this.props.postData.message}\n            </div>\n            <div className=\"chat-post-backside\">\n              <p><span className=\"chat-icon-calendar\"><CalendarIcon /></span> active since July 13, 2017</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n\n};\n\nexport default ChatPost;\n","import React from 'react';\n\nconst SendIcon = (props) => (\n  <svg width=\"24\" height=\"24\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\" {...props}>\n    <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" fill=\"currentColor\"></path>\n    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n  </svg>\n);\n\nexport default SendIcon;\n","import React, { Component } from 'react';\nimport './Chat.css';\nimport ChatPost from './ChatPost';\nimport SendIcon from '../../components/Icons/SendIcon';\n\nclass Chat extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: {\n        client : {\n          id: \"client\",\n          username: \"client\",\n          real_name: \"\",\n          verified: false\n        }\n      },\n      posts: [],\n      status: 'Loading Chat ...',\n      postsBusy : true,\n      formBusy : false,\n      maxPostChars : 140,\n      remainingPostChars : 140\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/users')\n      .then(res => res.json())\n      .then(\n        users => {\n          // make users addressable by their user id ...\n          let usersById = this.state.users;\n          users.map(user => {usersById[user.id] = user; return true;})\n          this.setState({ users : usersById })\n        }\n      )\n    fetch('/api/posts')\n      .then(res => res.json())\n      .then(\n        posts => this.setState({\n          posts : posts,\n          status: 'READY!',\n          postsBusy: false\n        })\n      )\n  }\n\n  getUserDataByID(userID) {\n\n    if(!this.state.users[userID])\n      return null;\n\n    let userData = this.state.users[userID];\n    // srcet options would be good here ...\n    userData.profileImgSrc = '/media/users/' + userData.username + '.jpg';\n    // alt profile image description probably detrimental to screenreaders in this context\n    userData.profileImgAlt = '';\n\n    return userData;\n\n  }\n\n  remainingChars = (event) => {\n    let remainingChars = this.state.maxPostChars - event.target.value.length;\n    this.setState({remainingPostChars: remainingChars});\n  }\n\n  scrollToBottom = () => {\n    this.refs.chatList.scrollTop = this.refs.chatList.scrollHeight;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({formBusy: true});\n\n    let ts = Date.now() / 1000;\n    let newPost = {\n      \"id\": ts,\n      \"user\": 'client',\n      \"message\": this.refs.chatInput.value,\n      \"ts\": ts\n    };\n\n    fetch('/api/posts', {\n      method: 'post',\n      body: JSON.stringify(newPost),\n      headers: {\"Content-Type\": \"application/json\"}\n    })\n    .then(res => res.json())\n    .then(res => {\n      console.log('res', res);\n      let newPosts = this.state.posts;\n      newPosts.push(newPost);\n      this.setState({\n        posts: newPosts,\n        formBusy: false\n      });\n      this.refs.chatInput.value = \"\";\n      // maybe forcing focus is a bit much ...\n      this.refs.chatInput.focus();\n    });\n\n    return false;\n  }\n\n  render() {\n    return (\n      <form\n        className=\"chat\" aria-label=\"Web Chat\"\n        aria-busy={this.state.formBusy}\n        onSubmit={this.handleSubmit} >\n        <a href=\"#chatInput\" className=\"ui_showto-focus\" role=\"button\">skip to chat input</a>\n        {\n          this.state.postsBusy ? (\n          <div className=\"chat-status\" role=\"status\" aria-live=\"polite\">\n            {this.state.status}\n          </div>\n          ) : null\n        }\n        <ul\n          className=\"chat-list\"\n          aria-label=\"Chat Log\"\n          aria-busy={this.state.postsBusy ? \"true\" : \"false\"}\n          aria-hidden={this.state.postsBusy ? \"true\" : \"false\"}\n          tabIndex=\"0\"\n          ref=\"chatList\"\n        >\n        {this.state.posts.map(post =>\n          <ChatPost\n            key={post.id}\n            postData={post}\n            userData={this.getUserDataByID(post.user)}\n            scrollToBottom={this.scrollToBottom}\n          />\n        )}\n        </ul>\n\n        <div className=\"chat-input-wrap\">\n          <label htmlFor=\"chatInput\">\n            <span className=\"ui_inclusively-hidden\">Chat Input : </span>\n            <span className=\"chat-input-charCount-wrap\" aria-live=\"polite\">\n              <span className=\"chat-input-charCount ui_text-small\" >{this.state.remainingPostChars}</span>\n              <span className=\"ui_inclusively-hidden\">characters remaining</span>\n            </span>\n          </label>\n          <input\n            id=\"chatInput\" className=\"chat-input\" type=\"text\" placeholder=\"what's happening?\" maxLength={this.state.maxPostChars} autoComplete=\"off\" required\n            ref=\"chatInput\"\n            onKeyUp={this.remainingChars}\n            disabled={this.state.formBusy}\n            />\n          <button id=\"chatSubmit\" className=\"chat-submit\" type=\"submit\" disabled={this.state.formBusy}>\n            <SendIcon className=\"chat-submit-icon\" />\n            <span className=\"ui_inclusively-hidden\">submit</span>\n          </button>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from 'react';\nimport Chat from './components/Chat/Chat';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Chat />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.hydrate(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}